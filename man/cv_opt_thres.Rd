% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_functions.R
\name{cv_opt_thres}
\alias{cv_opt_thres}
\title{Estimation of the shrinkage estimator based on cross validation}
\usage{
cv_opt_thres(
  A,
  Z,
  kappa = c(0.1, 1, 5, 10, 50, 100),
  par1 = T,
  par2 = F,
  weights = NULL,
  n.split = 50,
  num_cores = 8
)
}
\arguments{
\item{A}{A qXp matrix characterizing the binding relationship between higher- and lower-level variables. A should have 0-1 entries.
If the (j,k) entry of A is 1, then the j-th lower-level variable belongs to the k-th higher-level variable.}

\item{Z}{An nXq matrix of lower-level measurements; n is the sample size; q is the number of lower-level variables.}

\item{kappa}{A vector of candidate values of kappa. The default is c(0.1, 0.5, 1, 5, 10, 50, 100).}

\item{par1}{Whether mclapply() is used. The default is TRUE.}

\item{par2}{Whether additional parallel computing is used. The default is FALSE.}

\item{weights}{Whether the shrinkage weights are pre-specified. The default is NULL, which means that the weights need to be estimated.}

\item{n.split}{How many sample splittings will be performed? The default is 50.}

\item{num_cores}{How many cores are used for parallel computing? The default is 8.}
}
\value{
A list of two objects.
\itemize{
\item \code{cv_result}: cross-validation-based F-norm statistics for all kappas.
\item \code{kappa.min}: the optimal value of kappa from the pool.
}
}
\description{
Given the direct covariance estimator, this function generates the optimal shrinkage which is guaranteed positive definiteness, where kappa is selected by cross validation.
}
\examples{
\dontrun{
data(toy_lower_dat)
data(toy_binding)
fit.cv <- cv_opt_thres(A=toy_binding, Z=toy_lower_dat, n.split=20)
Sigma_hat <- direct_est(Z=toy_lower_dat, A=toy_binding)$cov.est
fit <- opt_thres(Sigma=Sigma_hat, A=toy_binding, Z=toy_lower_dat, kappa = fit.cv$kappa.min)
}
}
